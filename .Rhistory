tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
data$desc <- rollapply(data$open, width=3, FUN = asc, fill = NA, align = "right" )
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
data$desc <- rollapply(data$open, width=5, FUN = asc, fill = NA, align = "right" )
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
data$desc <- rollapply(data$open, width=4, FUN = asc, fill = NA, align = "right" )
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source('~/Develop/R/rTrade/R/BuyStrategies.R')
source('~/Develop/R/rTrade/R/SellStrategies.R')
binStrategy <- binStrategies$distributingMeanBinStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source('~/Develop/R/rTrade/R/BuyStrategies.R')
source('~/Develop/R/rTrade/R/SellStrategies.R')
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source('~/Develop/R/rTrade/R/BuyStrategies.R')
source('~/Develop/R/rTrade/R/SellStrategies.R')
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source('~/Develop/R/rTrade/R/BuyStrategies.R')
source('~/Develop/R/rTrade/R/SellStrategies.R')
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source('~/Develop/R/rTrade/R/BuyStrategies.R')
source('~/Develop/R/rTrade/R/SellStrategies.R')
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source('~/Develop/R/rTrade/R/BinStrategies.R')
binStrategy <- binStrategies$distributingMeanBinStrategy
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source("~/Develop/R/rTrade/R/BinStrategies.R")
source("~/Develop/R/rTrade/R/BuyStrategies.R")
source("~/Develop/R/rTrade/R/SellStrategies.R")
source("~/Develop/R/rTrade/R/Win.R")
require(rChange)
require(rQuant)
require(tidyverse)
require(dplyr)
require(odbc)
require(lubridate)
'%ni%' <- Negate('%in%')
connection <- DBI::dbConnect(odbc::odbc(), "cryptonoi.se")
datA <- tbl(connection, "cryptocompare_histoMinute")
datA %>% filter(time>1540485262, exchange=="BitTrex", currency="BTC") %>%  collect() -> dataHistorical
datA %>% filter(time>1540485262, exchange=="BitTrex", currency=="BTC") %>%  collect() -> dataHistorical
rQuant <- init_rQuant()
dataHistorical$floor <- floor((dataHistorical$time %/% (5 * 60)) * (5 * 60))
dataHistorical <- dataHistorical %>%
group_by(coin, floor) %>%
summarize(time = first(time),
open = first(open),
close = last(close),
low = min(low),
high = max(high))
#data <- rQuant$bollingerBands$calculate(dataHistorical, 12, 24, TRUE)
data <- rQuant$candlesticks$calculate(dataHistorical)
fd <- function(a) {
return((a[2] - a[1]))
}
asc <- function(a) {
a<- na.omit(a)
sum <- sum(a)
if (sum > 0) {
return (TRUE)
} else {
return (FALSE)
}
}
desc <- function(a) {
a<- na.omit(a)
sum <- sum(a)
if (sum > 0) {
return (TRUE)
} else {
return (FALSE)
}
}
data$fd <- rollapply(data$close, width=2, FUN = fd, fill = NA, align = "right")
data$asc <- rollapply(data$fd, width=2, FUN = asc, fill = NA, align = "right")
data$desc <- rollapply(data$fd, width=2, FUN = desc, fill = NA, align = "right" )
data %>% mutate(green <- close > open)
windowSize = 12
tradeBookCostRatio = 0
binStrategy <- binStrategies$simpleBinStrategy
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
numberOfBins = 50
initialInvestment = 0.1
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
#datA %>% filter(time>1529533355) %>%  collect() -> dataHistorical
datA %>%  filter(exchange == "BitTrex", currency == "BTC") %>% collect() -> dataHistorical
dataHistorical %>% filter(time > 1512532579) -> dataHistorical
rQuant <- init_rQuant()
#data <- rQuant$bollingerBands$calculate(dataHistorical, 12, 1, TRUE)
data <- rQuant$candlesticks$calculate(dataHistorical)
asc <- function(a) {
allAsc <- TRUE
for (i in 1:(length(a)-1)) {
if(a[i] > a[i+1]) {
allAsc <- FALSE
}
}
return(allAsc)
}
data$asc <- rollapply(data$open, width=2, FUN = asc, fill = NA, align = "right")
data$desc <- rollapply(data$open, width=4, FUN = asc, fill = NA, align = "right" )
windowSize = 12
tradeBookCostRatio = 0
binStrategy <- binStrategies$distributingMeanBinStrategy
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
numberOfBins = 150
initialInvestment = 1
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
datA <- tbl(connection, "cryptocompare_histoDay")
datA <- tbl(connection, "cryptocompare_histoDay")
#datA %>% filter(time>1529533355) %>%  collect() -> dataHistorical
datA %>%  filter(exchange == "BitTrex", currency == "BTC") %>% collect() -> dataHistorical
dataHistorical %>% filter(time > 1512532579) -> dataHistorical
rQuant <- init_rQuant()
#data <- rQuant$bollingerBands$calculate(dataHistorical, 12, 1, TRUE)
data <- rQuant$candlesticks$calculate(dataHistorical)
asc <- function(a) {
allAsc <- TRUE
for (i in 1:(length(a)-1)) {
if(a[i] > a[i+1]) {
allAsc <- FALSE
}
}
return(allAsc)
}
data$asc <- rollapply(data$open, width=2, FUN = asc, fill = NA, align = "right")
data$desc <- rollapply(data$open, width=4, FUN = asc, fill = NA, align = "right" )
windowSize = 12
tradeBookCostRatio = 0
binStrategy <- binStrategies$distributingMeanBinStrategy
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
numberOfBins = 150
initialInvestment = 1
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
#datA %>% filter(time>1529533355) %>%  collect() -> dataHistorical
datA %>%  filter(exchange == "Cryptopia", currency == "BTC") %>% collect() -> dataHistorical
dataHistorical %>% filter(time > 1512532579) -> dataHistorical
rQuant <- init_rQuant()
#data <- rQuant$bollingerBands$calculate(dataHistorical, 12, 1, TRUE)
data <- rQuant$candlesticks$calculate(dataHistorical)
asc <- function(a) {
allAsc <- TRUE
for (i in 1:(length(a)-1)) {
if(a[i] > a[i+1]) {
allAsc <- FALSE
}
}
return(allAsc)
}
data$asc <- rollapply(data$open, width=2, FUN = asc, fill = NA, align = "right")
data$desc <- rollapply(data$open, width=4, FUN = asc, fill = NA, align = "right" )
windowSize = 12
tradeBookCostRatio = 0
binStrategy <- binStrategies$distributingMeanBinStrategy
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
numberOfBins = 150
initialInvestment = 1
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
numberOfBins = 200
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
numberOfBins = 250
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
numberOfBins = 100
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
numberOfBins = 50
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
numberOfBins = 20
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
numberOfBins = 70
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
initialInvestment = 0.1
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
dataHistorical %>% filter(time > 1541476579) -> dataHistorical
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
rQuant <- init_rQuant()
#data <- rQuant$bollingerBands$calculate(dataHistorical, 12, 1, TRUE)
data <- rQuant$candlesticks$calculate(dataHistorical)
asc <- function(a) {
allAsc <- TRUE
for (i in 1:(length(a)-1)) {
if(a[i] > a[i+1]) {
allAsc <- FALSE
}
}
return(allAsc)
}
data$asc <- rollapply(data$open, width=2, FUN = asc, fill = NA, align = "right")
data$desc <- rollapply(data$open, width=4, FUN = asc, fill = NA, align = "right" )
#datA %>% filter(time>1529533355) %>%  collect() -> dataHistorical
datA %>%  filter(exchange == "Cryptopia", currency == "BTC") %>% collect() -> dataHistorical
dataHistorical %>% filter(time > 1541476579) -> dataHistorical
rQuant <- init_rQuant()
#data <- rQuant$bollingerBands$calculate(dataHistorical, 12, 1, TRUE)
data <- rQuant$candlesticks$calculate(dataHistorical)
asc <- function(a) {
allAsc <- TRUE
for (i in 1:(length(a)-1)) {
if(a[i] > a[i+1]) {
allAsc <- FALSE
}
}
return(allAsc)
}
data$asc <- rollapply(data$open, width=2, FUN = asc, fill = NA, align = "right")
data$desc <- rollapply(data$open, width=4, FUN = asc, fill = NA, align = "right" )
windowSize = 12
tradeBookCostRatio = 0
binStrategy <- binStrategies$distributingMeanBinStrategy
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
numberOfBins = 70
initialInvestment = 0.1
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
dataHistorical %>% filter(time > 1530849379) -> dataHistorical
#data <- rQuant$bollingerBands$calculate(dataHistorical, 12, 1, TRUE)
data <- rQuant$candlesticks$calculate(dataHistorical)
asc <- function(a) {
allAsc <- TRUE
for (i in 1:(length(a)-1)) {
if(a[i] > a[i+1]) {
allAsc <- FALSE
}
}
return(allAsc)
}
data$asc <- rollapply(data$open, width=2, FUN = asc, fill = NA, align = "right")
data$desc <- rollapply(data$open, width=4, FUN = asc, fill = NA, align = "right" )
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
#datA %>% filter(time>1529533355) %>%  collect() -> dataHistorical
datA %>%  filter(exchange == "Cryptopia", currency == "BTC") %>% collect() -> dataHistorical
dataHistorical %>% filter(time > 1530849379) -> dataHistoricalF
#data <- rQuant$bollingerBands$calculate(dataHistorical, 12, 1, TRUE)
data <- rQuant$candlesticks$calculate(dataHistoricalF)
data$asc <- rollapply(data$open, width=2, FUN = asc, fill = NA, align = "right")
data$desc <- rollapply(data$open, width=4, FUN = asc, fill = NA, align = "right" )
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source('~/Develop/R/rTrade/R/BuyStrategies.R')
source('~/Develop/R/rTrade/R/SellStrategies.R')
source('~/Develop/R/rTrade/R/SellStrategies.R')
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
initialInvestment = 1
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source('~/Develop/R/rTrade/R/BuyStrategies.R')
source('~/Develop/R/rTrade/R/SellStrategies.R')
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source('~/Develop/R/rTrade/R/SellStrategies.R')
source('~/Develop/R/rTrade/R/BuyStrategies.R')
source('~/Develop/R/rTrade/R/SellStrategies.R')
source('~/Develop/R/rTrade/R/BuyStrategies.R')
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
source("~/Develop/R/rTrade/R/BinStrategies.R")
source("~/Develop/R/rTrade/R/BuyStrategies.R")
source("~/Develop/R/rTrade/R/SellStrategies.R")
source("~/Develop/R/rTrade/R/Win.R")
require(rChange)
require(rQuant)
require(tidyverse)
require(dplyr)
require(odbc)
require(lubridate)
'%ni%' <- Negate('%in%')
connection <- DBI::dbConnect(odbc::odbc(), "cryptonoi.se")
datA <- tbl(connection, "cryptocompare_histoDay")
connection <- DBI::dbConnect(odbc::odbc(), "cryptonoi.se")
datA <- tbl(connection, "cryptocompare_histoDay")
#datA %>% filter(time>1529533355) %>%  collect() -> dataHistorical
datA %>%  filter(exchange == "Cryptopia", currency == "BTC") %>% distinct() %>% collect() -> dataHistorical
dataHistorical %>% filter(time > 1543835297) -> dataHistoricalF
rQuant <- init_rQuant()
asc <- function(a) {
allAsc <- TRUE
for (i in 1:(length(a)-1)) {
if(a[i] > a[i+1]) {
allAsc <- FALSE
}
}
return(allAsc)
}
data$asc <- rollapply(data$open, width=2, FUN = asc, fill = NA, align = "right")
data$desc <- rollapply(data$open, width=3, FUN = asc, fill = NA, align = "right" )
windowSize = 12
tradeBookCostRatio = 0
binStrategy <- binStrategies$distributingMeanBinStrategy
buyStrategy <- buyStrategies$cc$hammerBuyStrategy
sellStrategy <- sellStrategies$cc$hammerSellStrategy
numberOfBins = 70
initialInvestment = 1
bins <- win(data = data,
windowSize = windowSize,
binStrategy = binStrategy,
buyStrategy = buyStrategy,
sellStrategy = sellStrategy,
tradeBookCostRatio = tradeBookCostRatio,
numberOfBins = numberOfBins,
initialInvestment = initialInvestment)
